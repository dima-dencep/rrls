plugins {
    id "net.neoforged.moddev"
}

neoForge {
    version = rootProject.forge_version

    accessTransformers = project(":common").neoForge.accessTransformers.files
    interfaceInjectionData = project(":common").neoForge.interfaceInjectionData.files

    parchment {
        minecraftVersion = project(":common").neoForge.parchment.minecraftVersion
        mappingsVersion = project(":common").neoForge.parchment.mappingsVersion
    }

    runs {
        configureEach {
            systemProperty("mixin.debug.export", "true")
        }

        client {
            client()
        }
    }

    mods {
        create("rrls") {
            sourceSet(sourceSets.main)
            sourceSet(project(":common").sourceSets.getByName("main"))
        }
    }
}

dependencies {
    compileOnly(project(":common")) {
        transitive = false
    }
}

sourcesJar {
    def commonSources = project(":common").sourcesJar
    dependsOn commonSources
    from commonSources.archiveFile.map { zipTree(it) }
}

/*publishing {
    publications {
        mavenNeoForge(MavenPublication) {
            artifactId = rootProject.archives_base_name
            from components.java
        }
    }
}*/
