plugins {
    id "com.github.johnrengelman.shadow" version "8.1.1" apply false
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.6-SNAPSHOT" apply false
    id "net.neoforged.licenser" version "0.7.2" apply false
    id "io.github.p03w.machete" version "2.+" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"
    apply plugin: "io.github.p03w.machete"
    apply plugin: "net.neoforged.licenser"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    }

    machete {
        ignoredTasks.add("shadowJar")
        ignoredTasks.add("jar")
    }

    license {
        header = rootProject.file('HEADER')
        skipExistingHeaders = false

        tasks {
            rrls {
                files.from rootProject.fileTree("src", {
                    include "**/*.java"
                })
            }
        }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = "${rootProject.mod_version}+mc${rootProject.minecraft_version}-${project.name}"
    group = rootProject.maven_group

    repositories {
        maven {
            name "Modrinth"
            url "https://api.modrinth.com/maven"

            content {
                includeGroup "maven.modrinth"
            }
        }
        maven {
            name "CurseForge"
            url "https://cursemaven.com"

            content {
                includeGroup "curse.maven"
            }
        }
        maven { url "https://maven.shedaniel.me" }
        maven { url "https://maven.neoforged.net/releases" }
        maven { url "https://maven.terraformersmc.com/releases" }
    }

    tasks.withType(JavaCompile).configureEach {
        options.encoding = "UTF-8"
        options.release.set(17)
    }

    java {
        withSourcesJar()
    }

    publishing {
        repositories {
        }
    }
}